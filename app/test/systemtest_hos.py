# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestHos():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_hos(self):
    self.driver.get("http://127.0.0.1:5000/")
    self.driver.set_window_size(1549, 955)
    self.driver.find_element(By.ID, "username").click()
    self.driver.find_element(By.ID, "username").send_keys("11111111")
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys("hospassword")
    self.driver.find_element(By.ID, "submit").click()
    print("Login successfully")
    self.driver.find_element(By.LINK_TEXT, "View Workload").click()
    print("View Workload successfully")
    self.driver.find_element(By.LINK_TEXT, "Assign Workload").click()
    self.driver.find_element(By.LINK_TEXT, "View Workload").click()
    self.driver.find_element(By.CSS_SELECTOR, ".filter-input:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".filter-input:nth-child(2)").send_keys("tea")
    self.driver.find_element(By.CSS_SELECTOR, ".export-button").click()
    print("Export successfully")
    self.driver.find_element(By.CSS_SELECTOR, ".homepage-box-container").click()
    self.driver.find_element(By.CSS_SELECTOR, ".sortable:nth-child(5) > .fas").click()
    self.driver.find_element(By.CSS_SELECTOR, ".sortable:nth-child(5) > .fas").click()
    self.driver.find_element(By.CSS_SELECTOR, ".sortable:nth-child(5) > .fas").click()
    print("Sort successfully")
    self.driver.find_element(By.CSS_SELECTOR, ".filter-input:nth-child(5)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".filter-input:nth-child(6)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".filter-input:nth-child(6)").send_keys("3")
    print("Filter successfully")
    self.driver.find_element(By.CSS_SELECTOR, ".homepage-box-container").click()
    self.driver.find_element(By.LINK_TEXT, "View Workload").click()
    self.driver.find_element(By.CSS_SELECTOR, ".filter-input:nth-child(6)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".filter-input:nth-child(6)").send_keys("302")
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(8) > td:nth-child(5)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".workload-table").click()
    self.driver.find_element(By.LINK_TEXT, "Assign Workload").click()
    self.driver.find_element(By.ID, "unitCode").click()
    self.driver.find_element(By.ID, "unitCode").send_keys("n/a")
    self.driver.find_element(By.ID, "explanation").click()
    self.driver.find_element(By.ID, "explanation").send_keys("n/a")
    self.driver.find_element(By.ID, "assignedHours").click()
    self.driver.find_element(By.ID, "assignedHours").send_keys("1000")
    self.driver.find_element(By.CSS_SELECTOR, ".container").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(2)").click()
    print("Assign successfully")
   
if __name__ == "__main__":
    test = TestHos()
    test.setup_method(None)

    try:
        test.test_hos()
        print("Test passed successfully")
    except Exception as e:
        print("Test failed", e)
    finally:
        test.teardown_method(None)
